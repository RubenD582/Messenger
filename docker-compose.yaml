services:
  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=messenger
    ports:
      - "5432:5432"
    networks:
      - messanger_mynetwork
    volumes:
      - postgres_data:/var/lib/postgresql/data

  zookeeper:
    image: zookeeper:latest
    container_name: zookeeper
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
    ports:
      - "2181:2181"
    networks:
      - messanger_mynetwork

  kafka:
    image: 'bitnami/kafka:latest'
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,PLAINTEXT_HOST://:29092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
    ports:
      - "29092:29092"
    networks:
      - messanger_mynetwork
    depends_on:
      - zookeeper

  knex:
    build:
      context: ./server
      dockerfile: ./database/Dockerfile
    environment:
      - DB_HOST=${DB_HOST}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - DB_PORT=${DB_PORT}
    command: npx knex migrate:latest --env development
    networks:
      - messanger_mynetwork
    depends_on:
      - postgres

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6380:6379"
    networks:
      - messanger_mynetwork


networks:
  messanger_mynetwork:
    driver: bridge

volumes:
  postgres_data:
